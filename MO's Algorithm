ll n, q, ne, cnt=0;
ll a[100005], freq[1000005];

struct Q{
    ll l, r, ind;
};

bool cmp(Q a, Q b)
{
    if(a.l/ne == b.l/ne) return a.r < b.r;
    return a.l < b.l;
}

void add(ll pos)
{
    freq[a[pos]]++;
    if(freq[a[pos]]==1) cnt++;
}

void remove(ll pos)
{
    freq[a[pos]]--;
    if(freq[a[pos]]==0) cnt--;
}

int main()
{
    int test; cin>>test;
    for(ll te=1;te<=test;te++)
    {
        cin>>n>>q;
        for(ll i=0;i<n;i++) cin>>a[i];

        ne=sqrt(n);
        vector<Q>v;

        ll ind=0;
        for(ll i=0;i<q;i++)
        {
            ll l,r; cin>>l>>r;
            v.pb({l-1, r-1, ind});
            ind++;
        }
        sort(v.begin(), v.end(), cmp);

        ll ans[q];
        ll ml=0, mr=-1;

        for(ll i=0;i<q;i++)
        {
            ll l=v[i].l;
            ll r=v[i].r;
            ll ind=v[i].ind;

            while(ml > l)
            {
                ml--; add(ml);
            }
            while(mr < r)
            {
                mr++; add(mr);
            }
            while(ml < l)
            {
                remove(ml); ml++;
            }
            while(mr > r)
            {
                remove(mr); mr--;
            }

            ans[ind]=cnt;
        }

        cout<<"Case "<<te<<":"<<endl;
        for(ll i=0;i<q;i++) cout<<ans[i]<<endl;

        for(ll i=0;i<n;i++) a[i]=0;
        for(ll i=0;i<=100000;i++) freq[i]=0;
        cnt=0;
    }
}
